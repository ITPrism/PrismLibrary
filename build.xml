<?xml version="1.0" encoding="UTF-8"?>
<project name="lib_prism" default="build" basedir=".">
	<description>Prism Library Package Builder</description>
	
	<loadfile property="version" srcfile="VERSION" />
	
	<!-- source directories -->
	<property name="cfg.srcDir" location="${basedir}/src" />
	<property name="cfg.testsDir" location="${basedir}/tests" />
	<property name="cfg.assetsDir" location="${basedir}/assets" />
	<property name="cfg.buildDir" location="${basedir}/build" />
	<property name="cfg.packageBuildDir" location="${basedir}/build/package" />
	<property name="cfg.vendorDir" location="${basedir}/vendor" />
	<property name="cfg.vendorDestDir" location="${cfg.packageBuildDir}/src/vendor" />
	
	<property name="cfg.assetsVendorDir" location="${basedir}/node_modules" />
	<property name="cfg.assetsVendorDestDir" location="${cfg.packageBuildDir}/assets/vendor" />
	
	<target name="build" depends="copy, build_component, clean, info" />
    
	<target name="copy" description="Prepare files and folders as a package">
	
		<copy file="${basedir}/lib_prism.xml" todir="${cfg.packageBuildDir}"/>
	
		<!-- Copy Prism Library Files -->
		<copy todir="${cfg.packageBuildDir}/src">
			<fileset dir="${cfg.srcDir}" />
	    </copy>
		
		<!-- Copy PHP Vendor Files -->
		<copy file="${cfg.vendorDir}/autoload.php" todir="${cfg.vendorDestDir}"/>
		
		<copy todir="${cfg.vendorDestDir}/composer">
			<fileset dir="${cfg.vendorDir}/composer" >
				<exclude name="installed.json" />
				<exclude name="LICENSE" />
			</fileset>
	    </copy>
		
		<copy todir="${cfg.vendorDestDir}/illuminate">
			<fileset dir="${cfg.vendorDir}/illuminate" />
	    </copy>
		<copy todir="${cfg.vendorDestDir}/league/fractal/src">
			<fileset dir="${cfg.vendorDir}/league/fractal/src" />
	    </copy>
		
		<!-- Copy Assets Files -->
		<copy todir="${cfg.packageBuildDir}/assets">
			<fileset dir="${cfg.assetsDir}" />
	    </copy>
		
		<!-- Copy Assets Vendor Files -->
		<copy file="${cfg.assetsVendorDir}/vue/dist/vue.esm-browser.prod.js" todir="${cfg.assetsVendorDestDir}/vue" />
		<copy file="${cfg.assetsVendorDir}/parsleyjs/dist/parsley.min.js" todir="${cfg.assetsVendorDestDir}/parsley" />
		<copy todir="${cfg.assetsVendorDestDir}/parsley/i18n">
		  <fileset dir="${cfg.assetsVendorDir}/parsleyjs/dist/i18n"/>
		</copy>
				
		<copy file="${cfg.assetsVendorDir}/cropperjs/dist/cropper.min.js" todir="${cfg.assetsVendorDestDir}/cropperjs" />
		<copy file="${cfg.assetsVendorDir}/cropperjs/dist/cropper.min.css" todir="${cfg.assetsVendorDestDir}/cropperjs" />
		<copy file="${cfg.assetsVendorDir}/is-loading/dist/isLoading.min.js" todir="${cfg.assetsVendorDestDir}/is-loading" />
		<copy file="${cfg.assetsVendorDir}/modaal/dist/css/modaal.min.css" todir="${cfg.assetsVendorDestDir}/modaal" />
		<copy file="${cfg.assetsVendorDir}/modaal/dist/js/modaal.min.js" todir="${cfg.assetsVendorDestDir}/modaal" />
		<copy file="${cfg.assetsVendorDir}/moment/min/moment.min.js" todir="${cfg.assetsVendorDestDir}/moment" />
		<copy file="${cfg.assetsVendorDir}/moment/min/locales.min.js" todir="${cfg.assetsVendorDestDir}/moment" />
		<copy file="${cfg.assetsVendorDir}/@pnotify/core/dist/PNotify.js" todir="${cfg.assetsVendorDestDir}/pnotify" />
		<copy file="${cfg.assetsVendorDir}/@pnotify/core/dist/PNotify.css" todir="${cfg.assetsVendorDestDir}/pnotify" />
		<copy file="${cfg.assetsVendorDir}/readmore-js/readmore.min.js" todir="${cfg.assetsVendorDestDir}/readmore-js" />
		<copy file="${cfg.assetsVendorDir}/sweetalert2/dist/sweetalert2.min.js" todir="${cfg.assetsVendorDestDir}/sweetalert2" />
		<copy file="${cfg.assetsVendorDir}/sweetalert2/dist/sweetalert2.min.css" todir="${cfg.assetsVendorDestDir}/sweetalert2" />
		<copy file="${cfg.assetsVendorDir}/js-loading-overlay/dist/js-loading-overlay.min.js" todir="${cfg.assetsVendorDestDir}/js-loading-overlay" />
		
		<copy todir="${cfg.assetsVendorDestDir}/tooltipster/css">
		  <fileset dir="${cfg.assetsVendorDir}/tooltipster/dist/css"/>
		</copy>
		
		<copy todir="${cfg.assetsVendorDestDir}/tooltipster/js">
		  <fileset dir="${cfg.assetsVendorDir}/tooltipster/dist/js"/>
		</copy>
		
		<copy todir="${cfg.assetsVendorDestDir}/fileupload/css">
		  <fileset dir="${cfg.assetsVendorDir}/blueimp-file-upload/css"/>
		</copy>
		
		<copy todir="${cfg.assetsVendorDestDir}/fileupload/img">
		  <fileset dir="${cfg.assetsVendorDir}/blueimp-file-upload/img"/>
		</copy>
		
		<copy todir="${cfg.assetsVendorDestDir}/fileupload/js">
		  <fileset dir="${cfg.assetsVendorDir}/blueimp-file-upload/js"/>
		</copy>
		
	</target>
	
	<!-- build component -->
	<target name="build_component" depends="copy" description="Packages the finally component file">
		<zip destfile="${cfg.buildDir}/${ant.project.name}_v${version}.zip">
			<fileset dir="${cfg.packageBuildDir}" />
		</zip>
	</target>
    
	<target name="clean" depends="build_component" description="Remove temporary files and folders">
		<delete dir="${cfg.packageBuildDir}" />
	</target>
	
	<target name="info" description="prints information">
		<echo message="Project: ${ant.project.name}" />
		<tstamp>
			<format property="buildtime" pattern="yyyy-MM-dd'T'HH:mm:ss" />
		</tstamp>
		<echo message="Buildtime: ${buildtime}" />
	</target>

</project>